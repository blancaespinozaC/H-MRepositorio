#BORRADOR DEL MENÚ DEL DASHBOARD
#alicia rodriguez 10/06/2024

import pandas as pd
from dash import dash_table
import dash
import dashboard_1 as dash1
import dashboard_2 as dash2
import dashboard_3 as dash3
import dash_bootstrap_components as dbc
from dash import Input, Output, dcc, html

app = dash.Dash(external_stylesheets=[dbc.themes.BOOTSTRAP],suppress_callback_exceptions=True)

# the style arguments for the sidebar. We use position:fixed and a fixed width
SIDEBAR_STYLE = {
    "position": "fixed",
    "top": 0,
    "left": 0,
    "bottom": 0,
    "width": "16rem",
    "padding": "3rem 1rem",
    "background-color": "#FFC96F",

}

# the styles for the main content position it to the right of the sidebar and
# add some padding.
CONTENT_STYLE = {
    "margin-left": "18rem",
    "margin-right": "2rem",
    "padding": "2rem 1rem",
    "background-color": "#FFE569",
    "background-image": "url('DataSet/descarga.png')",
    "background-size": "cover"
}

sidebar = html.Div(
    [
        html.H2("Categorias Mayor producto", className="display-4",style={"font-family":"cursive","color":"#FFC100"}),
        html.Hr(),
        html.P(
            "A simple sidebar layout with navigation links", className="lead"
        ),
        dbc.Nav(
            [
                dbc.NavLink("Home", href="/", active="exact"), #nav es navegacion
                dbc.NavLink("Dashboard 1", href="/page-1", active="exact",style={"font-family":"fantasy","color":"#FF6500"}),
                dbc.NavLink("Dashboard 2", href="/page-2", active="exact",style={"font-family":"fantasy","color":"#FF6500"}),
                dbc.NavLink("Dashboard 3", href="/dash-3", active="exact",style={"font-family":"fantasy","color":"#FF6500"}),
                dbc.NavLink("Github", href="https://github.com/", target="_blank", active="exact",style={"font-family":"fantasy","color":"#FF6500"})
            ],
            vertical=True,
            pills=True,
        ),
    ],
    style=SIDEBAR_STYLE,
)

content = html.Div(id="page-content", style=CONTENT_STYLE)

app.layout = html.Div([dcc.Location(id="url"), sidebar, content])
#layout  cuerpo o contenido


@app.callback(Output("page-content", "children"), [Input("url", "pathname")])
def render_page_content(pathname):
    if pathname == "/":
        return html.P("Home: Bienvenido a la página principal.")  # Aquí puedes poner el contenido del home
    elif pathname == "/dash-1":
        return html.P("Dashboard 1: Distribución de precios por categoría")  # Aquí pones el dashboard 1
    elif pathname == "/dash-2":
        return html.P("Dashboard 2: Producto más caro de cada categoría")  # Aquí pones el dashboard 2
    elif pathname == "/dash-3":
        return html.P("Dashboard 3: Productos más vendidos")  # Aquí pones el dashboard 3
    else:
    # If the user tries to reach a different page, return a 404 message
        return html.Div(
        [
            html.H1("404: Not found", className="text-danger"),
            html.Hr(),
            html.P(f"The pathname {pathname} was not recognised..."),
        ],
        className="p-3 bg-light rounded-3",
    )


if __name__ == "__main__":
    app.run_server(debug=True)
